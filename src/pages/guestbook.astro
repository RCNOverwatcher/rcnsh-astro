---
import Layout from "@layouts/Layout.astro";
import { SignIn, SignOut } from "auth-astro/components";
import { getSession } from "auth-astro/server";
import { GithubIcon } from "astro-feather";
import Header from "@components/Header.astro";
import { db, Guests, desc, eq } from "astro:db";
import Footer from "@components/Footer";
import Credits from "@components/Credits.astro";
import Filter from "bad-words";

const session = await getSession(Astro.request);

if (Astro.request.method === "POST") {
  const filter = new Filter();

  const email = session?.user?.email as string;
  const name = session?.user?.name as string;
  await db.delete(Guests).where(eq(Guests.email, email));

  const formData = await Astro.request.formData();
  const uncleanmessage = formData.get("message");

  if (
    typeof email === "string" &&
    typeof uncleanmessage === "string" &&
    typeof name === "string" &&
    uncleanmessage.length > 0 &&
    uncleanmessage.length <= 100
  ) {
    const message = filter.clean(uncleanmessage);
    await db
      .insert(Guests)
      .values({ email, name, message, published: new Date() });
  }
}

const comments = await db.select().from(Guests).orderBy(desc(Guests.published));
---

<Layout title="rcn.sh | Guestbook">
  <main
    class="text-[#c5c0b8] h-[100dvh] min-h-[100dvh] w-[100dvw] overflow-x-hidden py-8 flex flex-col"
    transition:animate="fade"
  >
    <Header />
    <section class="flex justify-center flex-col mt-8 w-[60%] mx-auto">
      <h1
        class="text-[#cdc8c2] text-xl lg:text-3xl md:text-2xl justify-center flex font-mono mx-2 mb-4"
      >
        Guestbook
      </h1>
      {
        session ? (
          <>
            <form method="POST" class="flex justify-center my-1 pt-4 flex-row">
              <input
                type="text"
                class="w-[80%] p-2 rounded-lg bg-[#2e2e2e] mx-2"
                placeholder="Leave a message"
                name="message"
                maxlength="100"
                minlength="1"
              />
              <button
                class="px-2 py-1 bg-[#cdc8c2] text-black rounded-lg lg:w-[20%] w-[40%]"
                type="submit"
              >
                Sign
              </button>
            </form>
            <span class="text-center text-[#c5c0b8] text-xs mx-auto">
              {session.user?.name} - {session.user?.email} |{" "}
              <SignOut class="underline">
                Logout
              </SignOut>
            </span>
          </>
        ) : (
          <SignIn
            provider="github"
            class={
              "px-2 py-2 bg-[#cdc8c2] text-black rounded-lg w-[50%] flex justify-center mx-auto lg:w-[20%]"
            }
          >
            <GithubIcon />
            <span class="mx-2">Login</span>
          </SignIn>
        )
      }
    </section>
    <hr class="bg-[#363b3d] border-none h-[2px] mt-2 w-[60%] mx-auto my-8" />
    <section>
      <ul class="flex flex-col justify-center items-center">
        {
          comments.map((comment) => (
            <li class="flex flex-col justify-center items-center my-4">
              <p class="text-center">{comment.message}</p>
              <p class="text-center text-[#c5c0b8] text-xs">
                {comment.name} - {comment.published.toLocaleTimeString("en-gb")}{" "}
                {comment.published.toLocaleDateString("en-gb")}
              </p>
            </li>
          ))
        }
      </ul>
    </section>
    <div class="mt-auto">
      <Footer client:only transition:persist>
        <Credits />
      </Footer>
    </div>
  </main>
</Layout>
